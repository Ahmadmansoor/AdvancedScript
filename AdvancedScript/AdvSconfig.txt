Varx ; variable type(int-str-array),variable name add [] for array, value optional(str,array);Teal;
Var ; define x64dbg variable type is just int;Teal;
Getx ; $varname, value;Teal;
Setx ; $variable name;Teal;
Movx ; P1, P2(will analyzed);Teal;
addx ; P1, P2(will analyzed);Teal;
subx ; P1, P2(will analyzed);Teal;
mulx ; P1, P2(will analyzed);Teal;
divx ; P1, P2(will analyzed);Teal;
andx ; P1, P2(will analyzed);Teal;
orx ; P1, P2(will analyzed);Teal;
xorx ; P1, P2(will analyzed);Teal;
shlx ; P1, P2(will analyzed);Teal;
pushx ; P1(will analyzed);Teal;
popx ; P1(will analyzed);Teal;
cmpx ; P1, P2(will analyzed);Teal;
if ; mainStr  > < = != ?  string , type (int, str/strb,stre,strc ) , line number if true , line number if false;Teal;
goto ; line number /lable line;Teal;
findx ; ;Teal;
findallx ; ;Teal;
findallmemx ; address, byte pattern to search, array variable to handle result ,size of the data to search in;Teal;
VarxClear; clear all variable's;Teal;
memdump ; address , size of data;Teal;
writeStr ; address , text to write , replace old string;Teal;
ReadStr ; variable , duint address;Teal;
ReadMem ;Read n byte under address;Teal;
BPxx ; Address , Name of the breakpoint(optional) ,Breakpoint type (optional);Teal;
bpcx ; Address //Delete a breakpoint;Teal;
bpex ; Address //Enable a breakpoint;Teal;
bpdx ; Address //Disable a breakpoint;Teal;
bphx ; Address ,Hardware breakpoint type ,Hardware breakpoint size //Set a hardware breakpoint;Teal;
bphcx ; Address/name //Delete a hardware breakpoint;Teal;
bphex ; Address/name //Enable a previously disabled hardware breakpoint;Teal;
bphdx ; Address/name //Disable a hardware breakpoint;Teal;
bpmx ; Address, restore the memory breakpoint once ,Breakpoint type;Teal;
asmx ; Address ,Instruction text, filled with NOPs;Teal;
GetAPIName ; varname ,  addrress;Teal;
ResizeArray ;  array,added amount (+ or -);Teal;
GetArraySize ; varArrName, varname;Teal;
Write2File ; path,over_append(false/true),data (Can be array );Teal;
ReadFile ;Read text file and Append Data to array variable just;Teal;
inputbox ; variable, message, title;Teal;
commentsetx ; address,String comment;Teal;
GetdesCallJmp ; variable, address of call;Teal;
run; ;Teal;
erun;passing all first-chance exceptions to the debuggee.;Teal;
pause; ;Teal;
StepInto; ;Teal;
StepOver; ;Teal;
StepOut; ;Teal;
ads.exebase ; get exe base;Lime;
ads.modulebase(); (Modulename or address)	get the base of module by name or address ( any address from the section);Lime;
ads.SectionSize(); (address) get Section base by address ( any address from the section);Lime;
ads.exefolderpath ; get exe folder path;Lime;
ads.exename ; get exe name;Lime;
ads.SectionBegin(); (address) get begin of the section by address ( any address from the section);Lime;
ads.SectionEnd(); (address) get End of the section by address ( any address from the section);Lime;
ads.GetAPIName(); (address)	 get API name from address;Lime;
ads.GetArraySize(); ($arrayName)	get the array size;Lime;
ads.ReadStr(); (address)	get string at address;Lime;
ads.GetdesCallJmp(); (address of Call) get the destination of call or Jmp :Like ;Lime;
int,;Dont forget to set value ;Fuchsia;
str,;value is optional ;Fuchsia;
array,;VarName[Array Size] ;Fuchsia;